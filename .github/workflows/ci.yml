name: FINSIGHT CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: |
          docker compose build

      - name: Start services
        run: |
          docker compose up -d
          sleep 30  # Give services time to start

      - name: Ingest data
        run: |
          for i in {1..3}; do curl -f http://localhost:8000/ingest/AAPL && break || sleep 5; done || exit 1
          for i in {1..3}; do curl -f http://localhost:8001/analyze/AAPL && break || sleep 5; done || exit 1

      - name: Set up Selenium and Google Chrome
        run: |
          sudo apt-get update
          # Install Google Chrome Stable
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          # Install matching chromedriver
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
          wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%%.*})/chromedriver_linux64.zip"
          sudo unzip /tmp/chromedriver.zip -d /usr/bin/
          sudo chmod +x /usr/bin/chromedriver
          # Verify installations
          /opt/google/chrome/google-chrome --version
          /usr/bin/chromedriver --version
          # Install Python dependencies
          pip install selenium requests urllib3==1.26.6 charset-normalizer==2.0.12

      - name: Run headless browser test
        run: |
          python -c "from selenium import webdriver
          from selenium.webdriver.common.by import By
          from selenium.webdriver.chrome.service import Service
          from selenium.webdriver.chrome.options import Options
          from selenium.webdriver.support.ui import WebDriverWait
          from selenium.webdriver.support import expected_conditions as EC
          # Configure Chrome options
          options = Options()
          options.binary_location = '/opt/google/chrome/google-chrome'  # Explicit binary path
          options.add_argument('--headless')
          options.add_argument('--no-sandbox')
          options.add_argument('--disable-dev-shm-usage')
          # Specify chromedriver path explicitly
          service = Service(executable_path='/usr/bin/chromedriver')
          driver = webdriver.Chrome(service=service, options=options)
          driver.get('http://localhost:5173')
          WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.TAG_NAME, 'input'))).send_keys('AAPL')
          WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.TAG_NAME, 'button'))).click()
          WebDriverWait(driver, 30).until(lambda d: len(d.find_elements(By.TAG_NAME, 'canvas')) >= 2)
          print('Graphs visible')
          prediction = driver.find_element(By.ID, 'stock-data').text.split(' ')[2]
          print(f'Predicted closing price: {prediction}')
          driver.quit()"

  cleanup:
    runs-on: self-hosted
    needs: test
    if: always()  # Runs even if test job fails
    steps:
      - name: Stop services
        run: |
          docker compose down